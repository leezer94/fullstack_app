generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  email        String        @unique
  hash         String
  hashedRT     String?
  firstName    String?
  lastName     String?
  profileImage String?
  bookmarks    Bookmark[]
  todos        Todo[]
  privateRoom  PrivateRoom[]

  @@map("users")
}

model Bookmark {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String?
  link        String
  userId      Int
  user        User     @relation(fields: [userId], references: [id])

  @@map("bookmarks")
}

model Todo {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String?
  status      String  @default("TODO")
  priority    String   
  userId      Int
  roomId      Int

  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  privateRoom PrivateRoom @relation(fields: [roomId], references: [id], onDelete: Cascade)

  @@map("todos")
}

model PrivateRoom {
  id           Int      @id @default(autoincrement())
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  title        String
  description  String?
  ownerId      Int
  todos        Todo[]
  participants Json[]
  user         User     @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  @@map("privateroom")
}
